---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rhioservices.rhio.hiro.io
spec:
  group: rhio.hiro.io
  names:
    categories: []
    kind: RhioService
    plural: rhioservices
    shortNames:
    - rhio
    singular: rhioservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for RhioServiceSpec via `CustomResource`
        properties:
          spec:
            properties:
              clusterConfig:
                properties:
                  listenerClass:
                    default: cluster-internal
                    description: |-
                      This field controls which type of Service the Operator creates for this ZookeeperCluster:

                      * cluster-internal: Use a ClusterIP service

                      * external-unstable: Use a NodePort service
                    enum:
                    - cluster-internal
                    - external-unstable
                    type: string
                type: object
              clusterOperation:
                default:
                  reconciliationPaused: false
                  stopped: false
                description: '[Cluster operations](https://docs.stackable.tech/home/0.1/concepts/operations/cluster_operations) properties, allow stopping the product instance as well as pausing reconciliation.'
                properties:
                  reconciliationPaused:
                    default: false
                    description: Flag to stop cluster reconciliation by the operator. This means that all changes in the custom resource spec are ignored until this flag is set to false or removed. The operator will however still watch the deployed resources at the time and update the custom resource status field. If applied at the same time with `stopped`, `reconciliationPaused` will take precedence over `stopped` and stop the reconciliation immediately.
                    type: boolean
                  stopped:
                    default: false
                    description: Flag to stop the cluster. This means all deployed resources (e.g. Services, StatefulSets, ConfigMaps) are kept but all deployed Pods (e.g. replicas from a StatefulSet) are scaled to 0 and therefore stopped and removed. If applied at the same time with `reconciliationPaused`, the latter will pause reconciliation and `stopped` will take no effect until `reconciliationPaused` is set to false or removed.
                    type: boolean
                type: object
              configuration:
                properties:
                  bindPort:
                    format: uint16
                    minimum: 0.0
                    type: integer
                  httpBindPort:
                    format: uint16
                    minimum: 0.0
                    type: integer
                  nats:
                    properties:
                      credentials:
                        nullable: true
                        properties:
                          password:
                            type: string
                          username:
                            type: string
                        required:
                        - password
                        - username
                        type: object
                      endpoint:
                        type: string
                    required:
                    - endpoint
                    type: object
                  networkId:
                    type: string
                  nodes:
                    items:
                      properties:
                        endpoints:
                          items:
                            type: string
                          type: array
                        publicKey:
                          type: string
                      required:
                      - endpoints
                      - publicKey
                      type: object
                    type: array
                  privateKeySecret:
                    type: string
                  s3:
                    nullable: true
                    properties:
                      credentials:
                        nullable: true
                        properties:
                          accessKey:
                            type: string
                          secretKey:
                            type: string
                        required:
                        - accessKey
                        - secretKey
                        type: object
                      endpoint:
                        type: string
                      region:
                        type: string
                    required:
                    - endpoint
                    - region
                    type: object
                required:
                - bindPort
                - httpBindPort
                - nats
                - networkId
                - nodes
                - privateKeySecret
                type: object
              image:
                anyOf:
                - required:
                  - custom
                  - productVersion
                - required:
                  - productVersion
                description: |-
                  Specify which image to use, the easiest way is to only configure the `productVersion`. You can also configure a custom image registry to pull from, as well as completely custom images.

                  Consult the [Product image selection documentation](https://docs.stackable.tech/home/0.1/concepts/product_image_selection) for details.
                properties:
                  custom:
                    description: Overwrite the docker image. Specify the full docker image name, e.g. `docker.stackable.tech/stackable/superset:1.4.1-stackable2.1.0`
                    type: string
                  productVersion:
                    description: Version of the product, e.g. `1.4.1`.
                    type: string
                  pullPolicy:
                    default: Always
                    description: '[Pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy) used when pulling the image.'
                    enum:
                    - IfNotPresent
                    - Always
                    - Never
                    type: string
                  pullSecrets:
                    description: '[Image pull secrets](https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod) to pull images from a private registry.'
                    items:
                      description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    nullable: true
                    type: array
                  repo:
                    description: Name of the docker repo, e.g. `docker.stackable.tech/stackable`
                    nullable: true
                    type: string
                  stackableVersion:
                    description: Stackable version of the product, e.g. `23.4`, `23.4.1` or `0.0.0-dev`. If not specified, the operator will use its own version, e.g. `23.4.1`. When using a nightly operator or a pr version, it will use the nightly `0.0.0-dev` image.
                    nullable: true
                    type: string
                type: object
              status:
                nullable: true
                properties:
                  conditions:
                    default: []
                    items:
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one status to another.
                          format: date-time
                          nullable: true
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          nullable: true
                          type: string
                        message:
                          description: A human readable message indicating details about the transition.
                          nullable: true
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          nullable: true
                          type: string
                        status:
                          description: Status of the condition, one of True, False, Unknown.
                          enum:
                          - 'True'
                          - 'False'
                          - Unknown
                          type: string
                        type:
                          description: Type of deployment condition.
                          enum:
                          - Available
                          - Degraded
                          - Progressing
                          - ReconciliationPaused
                          - Stopped
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                type: object
            required:
            - clusterConfig
            - configuration
            - image
            type: object
          status:
            nullable: true
            properties:
              conditions:
                default: []
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                      nullable: true
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      nullable: true
                      type: string
                    message:
                      description: A human readable message indicating details about the transition.
                      nullable: true
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      nullable: true
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                      type: string
                    type:
                      description: Type of deployment condition.
                      enum:
                      - Available
                      - Degraded
                      - Progressing
                      - ReconciliationPaused
                      - Stopped
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        title: RhioService
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: replicatedmessagestreams.rhio.hiro.io
spec:
  group: rhio.hiro.io
  names:
    categories: []
    kind: ReplicatedMessageStream
    plural: replicatedmessagestreams
    shortNames:
    - rms
    singular: replicatedmessagestream
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ReplicatedMessageStreamSpec via `CustomResource`
        properties:
          spec:
            properties:
              serviceRef:
                default:
                  name: null
                  namespace: null
                description: |-
                  A reference to a product cluster (for example, a `ZookeeperCluster`)

                  `namespace`'s defaulting only applies when retrieved via [`ClusterRef::namespace_relative_from`]
                properties:
                  name:
                    description: The name of the cluster
                    nullable: true
                    type: string
                  namespace:
                    description: |-
                      The namespace of the cluster

                      This field is optional, and will default to the namespace of the referring object.
                    nullable: true
                    type: string
                type: object
              streamName:
                type: string
              subjects:
                items:
                  type: string
                type: array
            required:
            - streamName
            - subjects
            type: object
          status:
            nullable: true
            type: object
        required:
        - spec
        title: ReplicatedMessageStream
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: replicatedmessagestreamsubscriptions.rhio.hiro.io
spec:
  group: rhio.hiro.io
  names:
    categories: []
    kind: ReplicatedMessageStreamSubscription
    plural: replicatedmessagestreamsubscriptions
    shortNames:
    - rmss
    singular: replicatedmessagestreamsubscription
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ReplicatedMessageStreamSubscriptionSpec via `CustomResource`
        properties:
          spec:
            properties:
              publicKey:
                type: string
              serviceRef:
                default:
                  name: null
                  namespace: null
                description: |-
                  A reference to a product cluster (for example, a `ZookeeperCluster`)

                  `namespace`'s defaulting only applies when retrieved via [`ClusterRef::namespace_relative_from`]
                properties:
                  name:
                    description: The name of the cluster
                    nullable: true
                    type: string
                  namespace:
                    description: |-
                      The namespace of the cluster

                      This field is optional, and will default to the namespace of the referring object.
                    nullable: true
                    type: string
                type: object
              subscriptions:
                items:
                  properties:
                    stream:
                      type: string
                    subject:
                      type: string
                  required:
                  - stream
                  - subject
                  type: object
                type: array
            required:
            - publicKey
            - subscriptions
            type: object
          status:
            nullable: true
            type: object
        required:
        - spec
        title: ReplicatedMessageStreamSubscription
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: replicatedobjectstores.rhio.hiro.io
spec:
  group: rhio.hiro.io
  names:
    categories: []
    kind: ReplicatedObjectStore
    plural: replicatedobjectstores
    shortNames:
    - ros
    singular: replicatedobjectstore
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ReplicatedObjectStoreSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Generate the Kubernetes wrapper struct `ReplicatedObjectStore` from our Spec and Status struct

              This provides a hook for generating the CRD yaml (in crdgen.rs)
            properties:
              buckets:
                items:
                  type: string
                type: array
              serviceRef:
                default:
                  name: null
                  namespace: null
                description: |-
                  A reference to a product cluster (for example, a `ZookeeperCluster`)

                  `namespace`'s defaulting only applies when retrieved via [`ClusterRef::namespace_relative_from`]
                properties:
                  name:
                    description: The name of the cluster
                    nullable: true
                    type: string
                  namespace:
                    description: |-
                      The namespace of the cluster

                      This field is optional, and will default to the namespace of the referring object.
                    nullable: true
                    type: string
                type: object
            required:
            - buckets
            type: object
          status:
            nullable: true
            type: object
        required:
        - spec
        title: ReplicatedObjectStore
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: replicatedobjectstoresubscriptions.rhio.hiro.io
spec:
  group: rhio.hiro.io
  names:
    categories: []
    kind: ReplicatedObjectStoreSubscription
    plural: replicatedobjectstoresubscriptions
    shortNames:
    - ross
    singular: replicatedobjectstoresubscription
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ReplicatedObjectStoreSubscriptionSpec via `CustomResource`
        properties:
          spec:
            properties:
              buckets:
                items:
                  properties:
                    localBucket:
                      type: string
                    remoteBucket:
                      type: string
                  required:
                  - localBucket
                  - remoteBucket
                  type: object
                type: array
              publicKey:
                type: string
              serviceRef:
                default:
                  name: null
                  namespace: null
                description: |-
                  A reference to a product cluster (for example, a `ZookeeperCluster`)

                  `namespace`'s defaulting only applies when retrieved via [`ClusterRef::namespace_relative_from`]
                properties:
                  name:
                    description: The name of the cluster
                    nullable: true
                    type: string
                  namespace:
                    description: |-
                      The namespace of the cluster

                      This field is optional, and will default to the namespace of the referring object.
                    nullable: true
                    type: string
                type: object
            required:
            - buckets
            - publicKey
            type: object
          status:
            nullable: true
            type: object
        required:
        - spec
        title: ReplicatedObjectStoreSubscription
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: listeners.listeners.stackable.tech
spec:
  group: listeners.stackable.tech
  names:
    categories: []
    kind: Listener
    plural: listeners
    shortNames: []
    singular: listener
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ListenerSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Exposes a set of pods to the outside world.

              Essentially a Stackable extension of a Kubernetes Service. Compared to a Service, a Listener changes three things: 1. It uses a cluster-level policy object (ListenerClass) to define how exactly the exposure works 2. It has a consistent API for reading back the exposed address(es) of the service 3. The Pod must mount a Volume referring to the Listener, which also allows ["sticky" scheduling](https://docs.stackable.tech/home/0.1/listener-operator/listener#_sticky_scheduling).

              Learn more in the [Listener documentation](https://docs.stackable.tech/home/0.1/listener-operator/listener).
            properties:
              className:
                description: The name of the [ListenerClass](https://docs.stackable.tech/home/0.1/listener-operator/listenerclass).
                nullable: true
                type: string
              extraPodSelectorLabels:
                additionalProperties:
                  type: string
                default: {}
                description: Extra labels that the Pods must match in order to be exposed. They must _also_ still have a Volume referring to the Listener.
                type: object
              ports:
                description: Ports that should be exposed.
                items:
                  properties:
                    name:
                      description: |-
                        The name of the port.

                        The name of each port *must* be unique within a single Listener.
                      type: string
                    port:
                      description: The port number.
                      format: int32
                      type: integer
                    protocol:
                      description: The layer-4 protocol (`TCP` or `UDP`).
                      nullable: true
                      type: string
                  required:
                  - name
                  - port
                  type: object
                nullable: true
                type: array
              publishNotReadyAddresses:
                default: true
                description: Whether incoming traffic should also be directed to Pods that are not `Ready`.
                nullable: true
                type: boolean
            type: object
          status:
            description: Informs users about how to reach the Listener.
            nullable: true
            properties:
              ingressAddresses:
                description: All addresses that the Listener is currently reachable from.
                items:
                  description: One address that a Listener is accessible from.
                  properties:
                    address:
                      description: The hostname or IP address to the Listener.
                      type: string
                    addressType:
                      description: The type of address (`Hostname` or `IP`).
                      enum:
                      - Hostname
                      - IP
                      type: string
                    ports:
                      additionalProperties:
                        format: int32
                        type: integer
                      description: Port mapping table.
                      type: object
                  required:
                  - address
                  - addressType
                  - ports
                  type: object
                nullable: true
                type: array
              nodePorts:
                additionalProperties:
                  format: int32
                  type: integer
                description: |-
                  Port mappings for accessing the Listener on each Node that the Pods are currently running on.

                  This is only intended for internal use by listener-operator itself. This will be left unset if using a ListenerClass that does not require Node-local access.
                nullable: true
                type: object
              serviceName:
                description: The backing Kubernetes Service.
                nullable: true
                type: string
            type: object
        required:
        - spec
        title: Listener
        type: object
    served: true
    storage: true
    subresources:
      status: {}
